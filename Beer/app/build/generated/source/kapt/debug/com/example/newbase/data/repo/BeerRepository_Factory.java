// Generated by Dagger (https://dagger.dev).
package com.example.newbase.data.repo;

import com.example.newbase.data.dataSource.remote.BeerRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BeerRepository_Factory implements Factory<BeerRepository> {
  private final Provider<BeerRemoteDataSource> beerRemoteDataSourceProvider;

  public BeerRepository_Factory(Provider<BeerRemoteDataSource> beerRemoteDataSourceProvider) {
    this.beerRemoteDataSourceProvider = beerRemoteDataSourceProvider;
  }

  @Override
  public BeerRepository get() {
    return newInstance(beerRemoteDataSourceProvider.get());
  }

  public static BeerRepository_Factory create(
      Provider<BeerRemoteDataSource> beerRemoteDataSourceProvider) {
    return new BeerRepository_Factory(beerRemoteDataSourceProvider);
  }

  public static BeerRepository newInstance(BeerRemoteDataSource beerRemoteDataSource) {
    return new BeerRepository(beerRemoteDataSource);
  }
}
