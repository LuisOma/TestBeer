// Generated by Dagger (https://dagger.dev).
package com.example.newbase.data.dataSource.remote;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BeerRemoteDataSource_Factory implements Factory<BeerRemoteDataSource> {
  private final Provider<BeerService> beerServiceProvider;

  public BeerRemoteDataSource_Factory(Provider<BeerService> beerServiceProvider) {
    this.beerServiceProvider = beerServiceProvider;
  }

  @Override
  public BeerRemoteDataSource get() {
    return newInstance(beerServiceProvider.get());
  }

  public static BeerRemoteDataSource_Factory create(Provider<BeerService> beerServiceProvider) {
    return new BeerRemoteDataSource_Factory(beerServiceProvider);
  }

  public static BeerRemoteDataSource newInstance(BeerService beerService) {
    return new BeerRemoteDataSource(beerService);
  }
}
