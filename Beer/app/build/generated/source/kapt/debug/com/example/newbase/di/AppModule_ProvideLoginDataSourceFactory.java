// Generated by Dagger (https://dagger.dev).
package com.example.newbase.di;

import android.content.SharedPreferences;
import com.example.newbase.data.dataSource.local.sharedPrefs.LoginDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideLoginDataSourceFactory implements Factory<LoginDataSource> {
  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public AppModule_ProvideLoginDataSourceFactory(
      Provider<SharedPreferences> sharedPreferencesProvider) {
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public LoginDataSource get() {
    return provideLoginDataSource(sharedPreferencesProvider.get());
  }

  public static AppModule_ProvideLoginDataSourceFactory create(
      Provider<SharedPreferences> sharedPreferencesProvider) {
    return new AppModule_ProvideLoginDataSourceFactory(sharedPreferencesProvider);
  }

  public static LoginDataSource provideLoginDataSource(SharedPreferences sharedPreferences) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideLoginDataSource(sharedPreferences));
  }
}
