// Generated by Dagger (https://dagger.dev).
package com.example.newbase.data.repo;

import com.example.newbase.data.dataSource.local.sharedPrefs.LoginDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginRepository_Factory implements Factory<LoginRepository> {
  private final Provider<LoginDataSource> loginDataSourceProvider;

  public LoginRepository_Factory(Provider<LoginDataSource> loginDataSourceProvider) {
    this.loginDataSourceProvider = loginDataSourceProvider;
  }

  @Override
  public LoginRepository get() {
    return newInstance(loginDataSourceProvider.get());
  }

  public static LoginRepository_Factory create(Provider<LoginDataSource> loginDataSourceProvider) {
    return new LoginRepository_Factory(loginDataSourceProvider);
  }

  public static LoginRepository newInstance(LoginDataSource loginDataSource) {
    return new LoginRepository(loginDataSource);
  }
}
